{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mad project\\\\Dashboard-starter\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\"; // parent Card\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n    children: expanded ? /*#__PURE__*/_jsxDEV(SelectCard, {\n      param: props,\n      setExpanded: () => setExpanded(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CompactCard, {\n      param: props,\n      setExpanded: () => setExpanded(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}; // Compact Card\n\n\n_s(Card, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = Card;\n\nfunction CompactCard(_ref) {\n  let {\n    param,\n    setExpanded\n  } = _ref;\n  const Png = param.png;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"CompactCard\",\n    style: {\n      background: param.color.backGround,\n      boxShadow: param.color.boxShadow\n    },\n    layoutId: \"expandableCard\",\n    onClick: setExpanded,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radialBar\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} // Expanded Card\n\n\n_c2 = CompactCard;\n\nfunction SelectCard(_ref2) {\n  let {\n    param,\n    setExpanded\n  } = _ref2;\n  const data = {};\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"ExpandedCard\",\n    style: {\n      background: param.color.backGround,\n      boxShadow: param.color.boxShadow\n    },\n    layoutId: \"expandableCard\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: param.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SelectCard;\nconst [selectedCards, setSelectedCards] = useState([]);\n\nconst toggleSelected = () => {\n  if (selectedCards.includes(props)) {\n    setSelectedCards(selectedCards.filter(card => card !== props));\n  } else {\n    setSelectedCards([...selectedCards, props]);\n  }\n};\n\nconst [expanded, setExpanded] = useState(false);\n\nconst onClickHandler = () => {\n  toggleSelected();\n  setExpanded(!expanded);\n};\n\nexport default Card;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CompactCard\");\n$RefreshReg$(_c3, \"SelectCard\");","map":{"version":3,"sources":["D:/Mad project/Dashboard-starter/src/components/Card/Card.jsx"],"names":["React","useState","motion","AnimateSharedLayout","Card","props","expanded","setExpanded","CompactCard","param","Png","png","background","color","backGround","boxShadow","title","img","SelectCard","data","selectedCards","setSelectedCards","toggleSelected","includes","filter","card","onClickHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\n// parent Card\n\nconst Card = (props) => {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <AnimateSharedLayout>\n      {expanded ? (\n        <SelectCard param={props} setExpanded={() => setExpanded(false)} />\n      ) : (\n        <CompactCard param={props} setExpanded={() => setExpanded(false)} />\n      )}\n    </AnimateSharedLayout>\n  );\n};\n\n// Compact Card\nfunction CompactCard({ param, setExpanded }) {\n  const Png = param.png;\n  return (\n    <motion.div\n      className=\"CompactCard\"\n      style={{\n        background: param.color.backGround,\n        boxShadow: param.color.boxShadow,\n      }}\n      layoutId=\"expandableCard\"\n      onClick={setExpanded}\n    >\n      <div className=\"radialBar\">\n\n        <span>{param.title}</span>\n      </div>\n      <div className=\"detail\">\n        <span>{param.img}</span>\n      </div>\n    </motion.div>\n  );\n}\n\n// Expanded Card\nfunction SelectCard({ param, setExpanded }) {\n  const data = {\n\n  };\n\n  return (\n    <motion.div\n      className=\"ExpandedCard\"\n      style={{\n        background: param.color.backGround,\n        boxShadow: param.color.boxShadow,\n      }}\n      layoutId=\"expandableCard\"\n    >\n\n      <span>{param.title}</span>\n    </motion.div>\n  );\n}\n\nconst [selectedCards, setSelectedCards] = useState([]);\nconst toggleSelected = () => {\n  if (selectedCards.includes(props)) {\n    setSelectedCards(selectedCards.filter((card) => card !== props));\n  } else {\n    setSelectedCards([...selectedCards, props]);\n  }\n};\n\nconst [expanded, setExpanded] = useState(false);\nconst onClickHandler = () => {\n  toggleSelected();\n  setExpanded(!expanded);\n};\n\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}
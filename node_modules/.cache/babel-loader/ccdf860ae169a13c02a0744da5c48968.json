{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mad project\\\\Dashboard-starter\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [selected, setSelected] = useState([]);\n  const history = useHistory();\n\n  const toggleSelect = id => {\n    if (selected.includes(id)) {\n      setSelected(selected.filter(sel => sel !== id));\n    } else {\n      setSelected([...selected, id]);\n    }\n  };\n\n  const handleExpanded = id => {\n    if (!selected.includes(id)) {\n      toggleSelect(id);\n    }\n  };\n\n  const handleCompact = id => {\n    toggleSelect(id);\n  };\n\n  const handleNavigate = () => {\n    history.push(\"/selected\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n    children: props.data.map(card => {\n      const isSelected = selected.includes(card.id);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: isSelected ? /*#__PURE__*/_jsxDEV(SelectCard, {\n          param: card,\n          handleToggle: () => toggleSelect(card.id),\n          handleNavigate: handleNavigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CompactCard, {\n          param: card,\n          handleToggle: () => toggleSelect(card.id),\n          handleExpanded: () => handleExpanded(card.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"eTZShtYnHCI6jEZNSaqG/3gBEaE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Card;\n\nfunction CompactCard(_ref) {\n  let {\n    param,\n    handleToggle,\n    handleExpanded\n  } = _ref;\n  const Png = param.png;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"CompactCard\",\n    style: {\n      background: param.color.backGround,\n      boxShadow: param.color.boxShadow\n    },\n    layoutId: `card-${param.id}`,\n    onClick: handleExpanded,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codeBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggle,\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = CompactCard;\n\nfunction SelectCard(_ref2) {\n  let {\n    param,\n    handleToggle,\n    handleNavigate\n  } = _ref2;\n  const data = {};\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"ExpandedCard\",\n    style: {\n      background: param.color.backGround,\n      boxShadow: param.color.boxShadow\n    },\n    layoutId: `card-${param.id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: param.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      children: \"Deselect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNavigate,\n      children: \"Go to selected cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SelectCard;\nexport default Card;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CompactCard\");\n$RefreshReg$(_c3, \"SelectCard\");","map":{"version":3,"sources":["D:/Mad project/Dashboard-starter/src/components/Card/Card.jsx"],"names":["React","useState","motion","AnimateSharedLayout","useHistory","Card","props","selected","setSelected","history","toggleSelect","id","includes","filter","sel","handleExpanded","handleCompact","handleNavigate","push","data","map","card","isSelected","CompactCard","param","handleToggle","Png","png","background","color","backGround","boxShadow","title","img","SelectCard"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Card = (props) => {\n  const [selected, setSelected] = useState([]);\n  const history = useHistory();\n\n  const toggleSelect = (id) => {\n    if (selected.includes(id)) {\n      setSelected(selected.filter((sel) => sel !== id));\n    } else {\n      setSelected([...selected, id]);\n    }\n  };\n\n  const handleExpanded = (id) => {\n    if (!selected.includes(id)) {\n      toggleSelect(id);\n    }\n  };\n\n  const handleCompact = (id) => {\n    toggleSelect(id);\n  };\n\n  const handleNavigate = () => {\n    history.push(\"/selected\");\n  };\n\n  return (\n    <AnimateSharedLayout>\n      {props.data.map((card) => {\n        const isSelected = selected.includes(card.id);\n\n        return (\n          <React.Fragment key={card.id}>\n            {isSelected ? (\n              <SelectCard\n                param={card}\n                handleToggle={() => toggleSelect(card.id)}\n                handleNavigate={handleNavigate}\n              />\n            ) : (\n              <CompactCard\n                param={card}\n                handleToggle={() => toggleSelect(card.id)}\n                handleExpanded={() => handleExpanded(card.id)}\n              />\n            )}\n          </React.Fragment>\n        );\n      })}\n    </AnimateSharedLayout>\n  );\n};\n\nfunction CompactCard({ param, handleToggle, handleExpanded }) {\n  const Png = param.png;\n\n  return (\n    <motion.div\n      className=\"CompactCard\"\n      style={{\n        background: param.color.backGround,\n        boxShadow: param.color.boxShadow,\n      }}\n      layoutId={`card-${param.id}`}\n      onClick={handleExpanded}\n    >\n      <div className=\"codeBox\">\n        <span>{param.title}</span>\n        <button onClick={handleToggle}>Select</button>\n      </div>\n      <div className=\"detail\">\n        <span>{param.img}</span>\n      </div>\n    </motion.div>\n  );\n}\n\nfunction SelectCard({ param, handleToggle, handleNavigate }) {\n  const data = {};\n\n  return (\n    <motion.div\n      className=\"ExpandedCard\"\n      style={{\n        background: param.color.backGround,\n        boxShadow: param.color.boxShadow,\n      }}\n      layoutId={`card-${param.id}`}\n    >\n      <span>{param.title}</span>\n      <button onClick={handleToggle}>Deselect</button>\n      <button onClick={handleNavigate}>Go to selected cards</button>\n    </motion.div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}